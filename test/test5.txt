.data
1000, 4, 3435973836
1004, 4, 858993459
1008, 4, 65535

# 3435973836--> (11001100 11001100 11001100 11001100) --> -858993460
# 858993459 --> (00110011 00110011 00110011 00110011)
# 65535     --> (00000000 00000000 11111111 11111111)
# 4294967295 -> (11111111111111111111111111111111111) --> -1

.address
5000   # starting address of instructions

.text
# The program here tests the bitwise instructions besides loading and storing 1 or 2 bits

addi x1,x1,1000         # x1  = 1000
lw x2, 0(x1)            # x2  = (11001100 11001100 11001100 11001100) = -858993460
lw x3, 4(x1)            # x3  = (00110011 00110011 00110011 00110011) =  858993459 
lw x4, 8(x1)            # x4  = (00000000 00000000 11111111 11111111) =  65535
and x5, x2, x4          # x5  = (00000000 00000000 11001100 11001100) = 52428
andi x6, x2, 65535      # x6  = (00000000 00000000 11001100 11001100) = 52428
or x7, x2, x4           # x7  = (11001100 11001100 11111111 11111111) = 3435986943 = -858980353
ori x8, x2, 65535       # x8  = (11001100 11001100 11111111 11111111) = 3435986943 = -858980353
xor x9, x2, x3          # x9  = (11111111 11111111 11111111 11111111) = 4294967295 = -1
xori x10, x2, 858993459 # x10 = (11111111 11111111 11111111 11111111) = 4294967295 = -1
addi x11,zero, 5        # x11 = 5
slt x12, x8, x11        # x12 = 1 (-858980353 < 5)
sltu x13, x8, x11       # x13 = 0 (3435986943 > 5)
# Now, we will try to load just one bit
lb x14, 0(x1)           # x14 = (11001100) = -52
lb x15, 4(x1)           # x15 = (00110011) = 51
lb x16, 8(x1)           # x16 = (11111111) = -1
lbu x17, 0(x1)          # x17 = (11001100) = 204
lbu x18, 4(x1)          # x18 = (00110011) = 51
lbu x19, 8(x1)          # x19 = (11111111) = 255
xor x20, x17, x19       # x20 = (00110011) = 51
srli x21, x15, 4        # x21 = (00000011) = 3
srli x22, x17, 5        # x22 = (00000110) = 6
srai x23, x14, 5        # x23 = (11111111) = -1
blt x23, x22,jump1      # Will go to jump1 (-1 < 6)
addi x24, x24, 5        # x24 = 0 (will not execute)
jump1:
bltu x23, x22,jump2     # Will not go to jump2 (255 > 6)
addi x25, x25, 5        # x25 = 5
jump2:
slli x26,x20,1           # x26 = (01100110) = 102 --> 51 * 2 